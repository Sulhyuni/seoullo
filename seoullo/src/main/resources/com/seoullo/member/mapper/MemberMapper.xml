<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seoullo.member.mapper.MemberMapper">

	<!-- 운영자의 리스트 (아이디, 이름, 등급명, 상태, 나이)(사용중) -->
	<select id="list" resultType="com.seoullo.member.vo.MemberVO">
		select id, name, gradeNo, gradeName, status, conDate,age
		from(
		select
		rownum rnum ,id, name, gradeNo, gradeName, status,conDate, age
		from(
		select m.id,m.name, g.gradeNo,g.gradeName, m.status,m.conDate, m.age
		from member m, grade g
		where (m.gradeNo = g.gradeNo) and m.gradeNo != 9
		<include refid="search" />
		order by id asc
		)
		)
		where rnum between #{startRow} and #{endRow}
	</select>

	<!-- getTotalRow (사용중) -->
	<select id="getTotalRow" resultType="Long">
		select count(*)
		from member
		where gradeNo != 9
		<include refid="search" />

	</select>

	<!-- key&word 운영자가 id를 검색할때 (사용중) -->
	<!-- 오류는 세밀하게 검색이 안된다... 다음에 수정하자... -->
	<sql id="search"> <!-- ''.toString()- '가운데 사이의 것을 문자열로 만들라는 뜻.' -->
<!-- 	where 1 =0  or 이면 -->
		<if test="word !=null and word !=''.toString()">   
			<if test="key.indexOf(''.toString()) >=0 ">
				 and (id like '%' || #{word} || '%')
			</if>
		</if>
	</sql>

	<!-- 가이드의 결제정보....리스트를....만들어야지...(사용중) -->
	<select id="guideList"
		resultType="com.seoullo.member.vo.MemberVO">
		select m.id, g.paymentNo, g.cardName, g.payMt, g.total, g.payDate
		from guidePay g, member m
		where (m.id = g.id) and m.id = #{id} 
	</select>




	<!-- 로그인 (사용중) -->
	<select id="login" resultType="com.seoullo.member.vo.MemberVO">
		select m.id, m.name, m.nickName,m.status,
		g.gradeNo,g.gradeName
		from member m, grade g
		where (id = #{id} and
		pw=#{pw}) and (m.gradeNo = g.gradeNo) and not
		m.status in('탈퇴')
	</select>

	<!--가이드의 상세보기....(사용중) -->
	<select id="guideView"
		resultType="com.seoullo.member.vo.MemberVO">
		SELECT m.id, m.name, m.nickName,
		m.email, g.gradeNo, g.gradeName, m.status, m.tel, m.gender,m.age,m.payDate
		FROM
		member m, grade g
		WHERE m.id = #{id}
		AND m.gradeNo = g.gradeNo

	</select>

	<!--일반회원 상세보기 -->
	<select id="view" resultType="com.seoullo.member.vo.MemberVO">
		SELECT m.id, m.name, m.nickName,
		m.email, g.gradeNo, g.gradeName, m.status, m.tel, m.gender,m.age
		FROM
		member m, grade g
		WHERE m.id = #{id}
		AND m.gradeNo = g.gradeNo

	</select>


	<!-- 아이디 찾기 -->
	<select id="findId" resultType="String">
		select id from member
		where
		name=#{name} and email=#{email}
		and not status in('탈퇴')
	</select>

	<!-- 비밀번호 찾기 -->
	<select id="findPw" resultType="String">
		select pw from member
		where
		id=#{id} and name=#{name}
		and email=#{email} and not status in('탈퇴')
	</select>

	<!-- 비밀번호 변경할때 현재의 비밀번호 조회해서 맞는지 알기 -->
	<select id="checkPw" resultType="int">
		select pw from member where id=#{id}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="updatePw">
		update member set pw = #{chgPw}
		where id=#{id} and
		pw=#{pw} and not status in('탈퇴')
	</update>

	<!-- 일반회원 회원가입 -->
	<insert id="commonWelcom">
		insert into
		member(id,pw,name,gradeNo,nickName,age,tel,email,gender)
		values(#{id},
		#{pw}, #{name},#{gradeNo}, #{nickName},#{age},#{tel} ,#{email},
		#{gender})
	</insert>



	<!-- 가이드 회원가입 -->
	<insert id="guideWelcom">
		<!-- paymentNo 값을 반환하는 SELECT 쿼리를 실행하여 변수에 저장 -->
		<selectKey resultType="int" keyProperty="paymentNo"
			order="BEFORE">
			SELECT guidePay_seq.nextval FROM dual
		</selectKey>
		insert into
		member(id,pw,name,gradeNo,nickName,age,paymentNo,tel,email,gender,payDate)
		values(#{id}, #{pw}, #{name},#{gradeNo},
		#{nickName},#{age},#{paymentNo},#{tel} ,#{email}, #{gender},sysdate)
	</insert>


	<!-- 가이드 결제 -->
	<insert id="guidePay">
		insert into
		guidePay(paymentNo,id,cardNo,cardName,gradeNo,payMt,total)
		values(guidePay_seq.nextval,#{id},#{cardNo},#{cardName},#{gradeNo},#{payMt},#{total})
	</insert>
	


	<update id="payDateUpdate">
		update member set payDate = sysdate
		where id=#{id}

	</update>
	<update id="updateGradeNo">
	update member 
	set gradeNo = #{gradeNo}
	where id = #{id}
	</update>



	<!-- 아이디 증복확인 -->
	<select id="checkId" resultType="int">
		select count(*)
		from member
		where
		id=#{id}
	</select>

	<!-- 닉네임 중복검사 -->
	<select id="checkNickName" resultType="int">
		select count(*)
		from member
		where nickName =#{nickName}
	</select>


	<!-- 운영자의 회원정보 변경 -->
	<update id="updateAdmin">
		update member set status = #{status}
		where id=#{id}
	</update>



	<!--회원정보 변경(위에 두개를 합친 것.) -->
	<update id="update">
		UPDATE member
		SET email = #{email},
		tel = #{tel},
		nickName = #{nickName}
		WHERE id = #{id}


	</update>

	<update id="guideUpdate">
		UPDATE member
		SET email = #{email},
		tel = #{tel},
		nickName = #{nickName}
		WHERE id = #{id}

	</update>

	<!-- 회원탈퇴시 상태변경 -->
	<update id="delete">
		update member set status='탈퇴'
		where id=#{id} and
		pw=#{pw}
	</update>

	<!-- 1년이상 접속을 안할시에 휴면으로 전환 -->
	<update id="updateHu">
		UPDATE member
		SET status = '휴면'
		WHERE SYSDATE - condate <![CDATA[>=]]>
		365

	</update>
	
	
	
	<!-- 1년이상 접속을 안할시에 휴면으로 전환 -->
	<update id="updatePay">
		UPDATE member
		SET status = '기간만료'
		WHERE (gradeNo = 2 or gradeNo = 3) and SYSDATE - PAYDATE <![CDATA[>=]]>
		180

	</update>
	
	

	<!-- 휴면 풀기 -->
	<update id="statusNomal">
		update member
		set status = '정상'
		where id=#{id} and pw=#{pw}

	</update>
	<update id="statusNo">
		update member
		set status = '정상'
		where id=#{id} 

	</update>







</mapper>