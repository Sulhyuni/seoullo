package com.seoullo.review.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.seoullo.review.service.ReviewService;
import com.seoullo.review.vo.ReviewVO;
import com.webjjang.util.PageObject;

import lombok.extern.log4j.Log4j;

@Controller
@RequestMapping("/review")
@Log4j
public class ReviewController {

	String path = "/upload/review";

	@Autowired
	@Qualifier("reviewServiceImpl")
	private ReviewService service;

	@RequestMapping("/list.do")
	public String list(@ModelAttribute("pageObject") PageObject pageObject, Model model) {
		model.addAttribute("list", service.list(pageObject));
		return "review/list";
	}

	// 탭 내 리스트
	@RequestMapping("/listTab.sub")
	public String listTab(PageObject pageObject, long tourNo, Model model) {
		System.out.println("****" + pageObject);
		model.addAttribute("list", service.listTab(pageObject, tourNo));
		return "review/listTab";
	}

	@RequestMapping("/view.do")
	public String view(long revNo, int inc, Model model) {
		model.addAttribute("vo", service.view(revNo, inc));
		return "review/view";
	}

	@GetMapping("/writeReview.do")
	public String writeReviewForm() {
		return "review/writeReview";
	}

	@PostMapping("/writeReview.do")
	public String writeReview(ReviewVO vo) {
		service.writeReview(vo);
		return "redirect:list.do";
	}

	@GetMapping("/writeAnswer.do")
	public String wrtieAnswerForm(long revNo, Model model) {
		model.addAttribute("vo", service.view(revNo, 0));
		return "review/writeAnswer";
	}

	@PostMapping("/writeAnswer.do")
	public String writeAnswer(ReviewVO vo) {
		service.writeAnswer(vo);
		return "redirect:list.do";
	}

	@GetMapping("/update.do")
	public String updateForm(long revNo, Model model) {
		model.addAttribute("vo", service.view(revNo, 0));
		return "review/update";
	}

	@PostMapping("/update.do")
	public String update(ReviewVO vo) {
		service.update(vo);
		return "redirect:view.do?revNo=" + vo.getRevNo() + "&inc=0";
	}

	@GetMapping("/deleteReview.do")
	public String deleteReview(long refNo, long bookNo) {
		service.deleteReview(refNo, bookNo);
		return "redirect:list.do";
	}

	@GetMapping("/deleteAnswer.do")
	public String deleteAnswer(long revNo) {
		service.deleteAnswer(revNo);
		return "redirect:list.do";
	}

	@PostMapping("/writeLike.do")
	public String writeLike(ReviewVO vo) {
		service.writeLike(vo);
		return "redirect:list.do";
	}
	
	@PostMapping("/deleteLike.do")
	public String deleteLike(ReviewVO vo) {
		service.deleteLike(vo);
		return  "redirect:list.do";
	}
}
