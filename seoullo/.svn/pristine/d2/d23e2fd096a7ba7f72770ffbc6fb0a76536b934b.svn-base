<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seoullo.member.mapper.MemberMapper">
	<!-- 운영자의 리스트 -->
	<select id="list" resultType="com.seoullo.member.vo.MemberVO">
		select id, name,
		nickName,gradeNo,gradeName, status, age
		from(
		select rownum rnum ,id,
		name, nickName,gradeNo, gradeName, status, age
		from(
		select m.id,
		m.name, m.nickName,g.gradeNo ,g.gradeName, m.status,
		to_char(m.age,'yyyy-mm-dd') age
		from
		member m, grade g
		where (m.gradeNo=
		g.gradeNo)and not m.status in('탈퇴')
		order by id asc
		)
		)
		where rnum between
		1 and 10
	</select>

	<!-- 로그인 -->
	<select id="login" resultType="com.seoullo.member.vo.MemberVO">
		select m.id, m.name,
		g.gradeNo,g.gradeName
		from member m, grade g
		where (id = #{id} and
		pw=#{pw}) and
		(m.gradeNo = g.gradeNo) and not
		m.status in('탈퇴')
	</select>

	<!--상세보기 -->
	<select id="view" resultType="com.seoullo.member.vo.MemberVO">
		select m.id, m.name, m.nickName,
		g.gradeNo, g.gradeName, m.status, m.tel, m.gender,
		to_char(m.age,'yyyy-mm-dd') age, p.total, p.cardName, p.cardNo,
		p.cpayMt,
		to_char(p.payDate,'yyyy-mm-dd') payDate
		from member m, grade
		g, payment p
		where id =#{id}
	</select>

	<!-- 아이디 찾기 -->
	<select id="findId">
		select id from member
		where name=#{name} and
		e_mail=#{e_mail} and not m.status in('탈퇴')
	</select>

	<!-- 비밀번호 찾기 -->
	<select id="findPw">
		select pw from member
		where id=#{id} and name=#{name}
		and e_mail=#{e_mail} and not m.status
		in('탈퇴')
	</select>
	<!-- 임시 비밀번호 발급 -->
	<update id="prePw">
		update member set pw=#{pw}
		where id=#{id} and not
		m.status in('탈퇴')
	</update>


	<!-- 비밀번호 변경 -->
	<update id="updatePw">
		update member set pw = #{pw}
		where id=#{id} and
		pw=#{pw} and not m.status in('탈퇴')
	</update>

	<!-- 일반회원 회원가입 -->
	<insert id="welcom">
		insert into member(id, pw, name, nickName, gender,
		e_mail ,age, tel, sysdate
		)
		values(#{id}, #{pw}, #{name}, #{nickName},
		#{gender},#{e_mail} ,#{age},
		#{tel},#{sysdate})
	</insert>

	<!-- 가이드 회원가입 -->
	<insert id="gWelcom">
		insert into member(id, pw, name, nickName, gender,
		e_mail ,age, tel,
		sysdate,cardNo, cardName, payMt, total, payDate )
		values(#{id}, #{pw}, #{name}, #{nickName}, #{gender},#{e_mail}
		,#{age},
		#{tel},#{sysdate},#{cardNo}, #{cardName}, #{payMt}, #{total},
		#{payDate})
	</insert>

	<!-- 아이디 증복확인 -->
	<select id="checkId">
		select id
		from member
		where id=#{id}
	</select>

	<!-- 닉네임 중복검사 -->
	<select id="checkNickName">
		select nickName
		from member
		where nickName =#{nickName}
	</select>

	<!--일반 / 가이드 회원정보 변경 -->
	<update id="update">
		update member set e_mail=#{e_mail}, tel=#{tel},
		nickName=#{nickName}
		where id=#{id} and pw=#{pw} and not m.status
		in('탈퇴')
	</update>

	<!-- 운영자의 회원정보 변경 -->
	<update id="updateAdimin">
		update member set e_mail=#{e_mail}, tel=#{tel},
		nickName=#{nickName}
		where id=#{id}
	</update>

	<!-- 회원탈퇴시 상태변경 -->
	<update id="delete">
		update member set status='탈퇴'
		where id=#{id} and
		pw=#{pw}
	</update>



</mapper>